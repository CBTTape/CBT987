         TITLE 'DISPLAY SMF DATA SETS THROUGH TSO'
*---------------------------------------------------------------------*
*       LARGE FORMAT - PUTLINE                                        *
*---------------------------------------------------------------------*
*                                                                     *
*       THIS TSOCP EMULATES THE OPERATOR 'D SMF' COMMAND. FOUND THE   *
*       CODE ON A MODS TAPE WITH NO NAME. ALSO IT WAS NOT RE-ENTRANT  *
*       HAD ALOT OF INTERNAL MACROS, AND HAD HARDCODED OFFSETS. SO    *
*       ADDED ALL THE DSECTS, ETC.  THIS IS ALSO A GOOD SOURCE TO SEE *
*       HOW THE SMF INFORMATION IS STORED IN THE 'SMCA' AND COMPANION *
*       RDS (RECORDING DATA SET BLOCKS). THIS IS ALSO GOOD WHEN YOU   *
*       ARE A CONTRACTOR AND THEY DON'T GIVE YOU OPERATOR AUTHORITY.  *
*       BUT YOU HAVE THE RESPONSIBILITY.                              *
*                                                                     *
*       JIM MARSHALL, CAPT, USAF-RET                                  *
*                                                                     *
* INSTALLED:  8 APRIL 1991                                            *
*                                                                     *
* CHANGE LOG: 11JUN91 - RUNS 31 BIT MODE                         JDM1 *
*                                                                     *
*             01JAN13 - IEEMBRDS was of the old format.          SBG  *
*                       Changed it for the new format,                *
*                       taken from SHOWzOS 7.21 macro library         *
*                       Converted command from TPUT to PUTLINE.       *
*                       Added a nice title instead of leading blanks. *
*---------------------------------------------------------------------*
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SP000    EQU   0                                                 JDM1
         SPACE
DSMF     CSECT
DSMF     AMODE 31
DSMF     RMODE ANY                                               JDM1
         SAVE  (14,12),,DSMF_&SYSDATE
         LR    R12,R15
         USING DSMF,R12
         GETMAIN RU,LV=WORKSIZE,SP=SP000,LOC=BELOW               JDM1
         USING WORKAREA,R1
         ST    R13,SAVE+4
         ST    R1,8(R13)
         LR    R13,R1
         DROP  R1
         USING WORKAREA,R13
         SPACE
*-------------------------------------------------------------------*
*        GO GET THE INFORMATION FROM THE SMCA AND RDS
*-------------------------------------------------------------------*
         SPACE
         L     R15,CVTPTR          GET POINTER TO CVT
         USING CVTMAP,R15          ESTABLISH ADDRESSABILITY
         L     R3,CVTSMCA          FIND SMCA
         DROP  R15
         USING SMCABASE,R3         ESTABLISH ADDRESSABILITY
         TM    1(R3),X'80'         IS SMF RECORDING ??
         BO    SMFOK
         APUT  NOSMF,80            INFORM YOU
         B     EXIT
         SPACE
SMFOK    EQU   *
         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1
         APUT  TITLE,L'TITLE       PRINT NAME OF REPORT          SBG
         APUT  TITLEU,L'TITLEU                                   SBG
         MVC   SMFANS(80),SMFHD    MOVE IN TITLE                 JDM1
         APUT  SMFANS,80           PUT OUT A TITLE               JDM1
         MVC   SMFANS(80),BLANKL   MOVE IN BLANKS                JDM1
         APUT  SMFANS,80           SEND OUT A BLANK LINE         JDM1
         L     R4,244(R3)          LOAD A(START OF RDS)
         USING IEEMBRDS,R4         ESTABLISH ADDRESSABILITY
         L     R5,248(R3)          LOAD A(END OF RDS)
LOOP     EQU   *
         MVC   SMFANS(80),BLANKL   CLEAR FOR GOOD PRACTICE
         MVC   SMFANS(80),SMFLINE  MOVE IN THE SKELETON
         MVC   SMFANS(27),RDSNAME  MOVE IN SMF DSN ID (27 CHARS OF 44)
         MVC   SMFANS+28(6),RDSVOLID  MOVE SMF VOLSER
         MVC   SMFANS+35(9),=CL9'ALTERNATE'
         TM    RDSFLG1,RDSREADY    IS DS ACTIVE ?
         BO    LOOP1
         MVC   SMFANS+35(9),=CL9'ACTIVE'
LOOP1    EQU   *
         TM    RDSFLG1,RDSDUMP     IS DUMP REQUIRED ?
         BNO   LOOP2
         MVC   SMFANS+35(9),=CL9'DUMP REQD'
LOOP2    EQU   *
         TM    RDSFLG2,RDSPHYER    PHYSCIAL I/O ERROR
         BO    LOOP3
         TM    RDSFLG2,RDSLOGER    LOGICAL I/O ERROR
         BO    LOOP4
         B     LOOP5
LOOP3    EQU   *
         MVC   SMFANS+35(9),=CL9'P I/O ERR'
         B     LOOP5
LOOP4    EQU   *
         MVC   SMFANS+35(9),=CL9'L I/O ERR'
LOOP5    EQU   *
         SLR   R14,R14             ZERO WORK REG 14
         L     R15,RDSNXTBL        ADDRESS OF NEXT BLOCK
         BCTR  R15,0
         CVD   R15,DBLEWD2
         M     R14,=F'100'
         L     R1,RDSCAPTY         SMF DS CAPACITY
         CVD   R1,DBLEWD1
         DR    R14,R1              GET PERCENT FULL
         CVD   R15,DBLEWD3
         MVC   SMFALOC(10),MASK1   MOVE IN THE MASK
         ED    SMFALOC(10),DBLEWD1+4
         MVC   SMFUSED(10),MASK1   MOVE IN THE MASK
         ED    SMFUSED(10),DBLEWD2+4
         MVC   SMFPERC(4),MASK2    MOVE IN THE MASK
         ED    SMFPERC(4),DBLEWD3+6
         APUT  SMFANS,80
         L     R4,RDSNEXT          GET NEXT RDS ON CHAIN
         CR    R5,R4               AT END OF CHAIN ???
         BNE   LOOP
         SPACE
*--------------------------------------------------------------------*
*        NOW WE CLEANUP AFTER OURSELVES AND GO HOME.
*--------------------------------------------------------------------*
         SPACE
EXIT     EQU   *
         LR    R1,R13
         L     R13,SAVE+4
         FREEMAIN RU,LV=WORKSIZE,A=(R1),SP=SP000                 JDM1
         RETURN (14,12),RC=0
         SPACE
*--------------------------------------------------------------------*
*        DATA AREA FOLLOWS
*--------------------------------------------------------------------*
         SPACE
TITLE    DC    C'                       DISPLAY SMF DATASETS '
TITLEU   DC    C'                       ------- --- -------- '
BLANKL   DC    CL80' '
MASK1    DC    XL10'40206B2020206B202120'
MASK2    DC    XL4'40202120'
NOSMF    DC    CL80'SMF IS NOT PRESENTLY RECORDING '
SMFHD    DC    CL80'--- SMF DATASET NAME ------ VOLSER --STATE-- BLKS Ax
               LLOC  BLKS USED %FULL'
*                   01234567890123456789012345678901234567890
SMFLINE  DS    0CL80
         DC    CL36' SYS1.MAN?                  VOLSER  '
         DC    CL09'ACTIVE'
         DC    CL11' X,XXX,XXX '   BLKS ALLOCATED
         DC    CL11' X,XXX,XXX '   BLKS USED
         DC    CL05' XXX '
         DC    CL8' '
         LTORG
         SPACE
WORKSIZE EQU   WORKEND-WORKAREA                                  JDM1
         SPACE
WORKAREA DSECT
         DS    0D
SAVE     DS    18F
DBLEWD1  DS    D
DBLEWD2  DS    D
DBLEWD3  DS    D
         SPACE
SMFANS   DS    0CL80
         DS    CL36' SYS1.MAN?  VOLSER  '
         DS    CL09'ACTIVE'
SMFALOC  DS    CL11' X,XXX,XXX '   BLKS ALLOCATED
SMFUSED  DS    CL11' X,XXX,XXX '   BLKS USED
SMFPERC  DS    CL05' XXX '
         DS    CL8' '
WORKEND  EQU   *
         SPACE
         CVT   DSECT=YES,LIST=NO
         SPACE
         IEESMCA
         SPACE
*--------------------------------------------------------------------*
*        RECORDING DATA SET BLOCKS                                   *
*        --------- ---- --- ------                                   *
*    Replaced with new DSECT from SHOWzOS 7.21 macro library.        *
*    The old version was from when SMF datasets had to be SYS1.MANx  *
*--------------------------------------------------------------------*
IEEMBRDS DSECT                         SMF RDS
RDSID    DS    C'RDS '                 CONTROL BLOCK ID
RDSNEXT  DS    A(IEEMBRDS)             FORWARD CHAIN POINTER
RDSPREV  DS    A(IEEMBRDS)             BACKWARD CHAIN POINTER
*
RDSFLG1  DS    X
RDSFREE  EQU   X'10'                   NEED TO FREE DATASET
RDSDUMP  EQU   X'08'                   OPER HAS BEEN TOLD TO DUMP DS
RDSREADY EQU   X'04'                   DS IS OPEN AND READY
RDSCLOSE EQU   X'02'                   DS NEEDS TO BE CLOSED
RDSNDOP  EQU   X'01'                   DS NEEDS TO BE OPENED
*
RDSFLG2  DS    X
RDSLOST  EQU   X'80'                   DUMMY RDS FOR LOST DATA
RDSPHYER EQU   X'40'                   PHYSICAL I/O ERROR
RDSLOGER EQU   X'20'                   LOGICAL I/O ERROR
RDSFLG3  DS    X                       RESERVED
RDSDSLEN DS    AL1(L'RDSNAME)          LENGTH OF DATA SET NAME  HBB5510
RDSNAME  DS    CL44'SYS1.MANX '        DATA SET NAME            HBB5510
RDSVOLID DS    C'SYSRES'               VOLUME SERIAL
         DS    2X                      alignment                HBB5510
RDSDDN   DS    C'SYS00001'             DDNAME RETURNED BY DYNALLOC
RDSCAPTY DS    F                       CAPACITY IN # OF BLOCKS
RDSNXTBL DS    F                       NUMBER OF NEXT AVAIL BLOCK
RDSBQE   DS    A                       ADDR OF BQE BEING WRITTEN
RDSAVSPC DS    F                       AVAIL SPACE FROM SHOWCB
RDSENRBA DS    F                       ENDRBA FROM SHOWCB
RDSCINV  DS    F                       CONTROL INTERVAL SIZE
RDSDOMID DS    F                       MSG # OF DUMP MSG
         DS    F                                                HBB5510
RDSRPL   DS    19F                     VSAM RPL
RDSACB   DS    19F                     VSAM ACB
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
